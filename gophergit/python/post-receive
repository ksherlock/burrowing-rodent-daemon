#!/usr/bin/env python3

import os
import subprocess

# update this...
WORK_TREE = "/tmp/git-gopher/"



EXCLUDE = { 'gophermap', '.', '..' }

GOPHER_TEXT_FILE = "0"
GOPHER_DIRECTORY = "1"
GOPHER_BINARY_FILE = "9"

# return None or (name, type, comment)
def log(dent):

	if dent.name in EXCLUDE: return None

	if not dent.is_file() and not dent.is_dir(): return None

	args = ['git', 'log', '-1', '--pretty=format:%s', dent.path ]

	child = subprocess.run(args, capture_output=True)
	rv = child.returncode
	comment = ''
	if rv == 0:
		comment = child.stdout.decode(encoding='ASCII', errors='ignore')
		comment = comment.strip()
		comment = comment.replace('\t', ' ')

	# with os.popen(args) as f:
	# 	comment = log.readline()
	# 	comment = comment.replace('\t', ' ')

	t = "01"[dent.is_dir()]

	return dent.name, t, comment

def process_dir(path):

	# os.chdir(path)

	with os.scandir(path) as dp:
		files = [log(x) for x in dp]

	files = [x for x in files if x]

	files.sort(key = lambda x: x[0] )


	# type display name \t selector \t host \t port
	with open(path + "/gophermap", "w") as f:
		for x in files:
			f.write("{}{:16} {}\t{}\n".format(x[1], x[0], x[2], x[0]))



	for x in files:
		if x[1] == GOPHER_DIRECTORY:
			process_dir(path + "/" + x[0])






os.environ["GIT_WORK_TREE"] = WORK_TREE

ok = os.system("git checkout -f")

process_dir(WORK_TREE)
